{"version":3,"file":"component---src-templates-login-js-64463dcbb7a1c71ad1a9.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/Login/Intro/LoginContent.js","webpack://gatsby-starter-default/./src/auth/loginUser.js","webpack://gatsby-starter-default/./src/components/Login/Intro/Intro.js","webpack://gatsby-starter-default/./src/templates/Login.js"],"sourcesContent":["import React, { useState, useContext }  from 'react'\nimport { Link, navigate } from 'gatsby'\nimport { useForm } from 'react-hook-form'\nimport NProgress from 'nprogress'\n\nimport 'nprogress/nprogress.css'\n\nimport LoginSocial from '../../LoginCommon/LoginSocial'\n\nimport { getUser } from '../../../auth/getUser'\nimport { loginUser } from '../../../auth/loginUser'\n\nimport { showErrModal } from '../../../utils/showErrModal'\nimport { setCookie } from '../../../utils/setCookie'\nimport { deleteCookie } from '../../../utils/deleteCookie'\n\nimport { PrefixContext } from '../../../context/PrefixProvider'\n\nconst LoginContent = ({ \n  loginForm, \n  resetPasswordLink, \n  beforeButtonsText,\n  afterButtonsText,\n  facebookButton,\n  googleButton,\n  createAccountLink,\n  validateErrors\n}) => {\n  const [ isUserLoggenin, setIsUserLoggenin ] = useState(false)\n  let prefix = useContext(PrefixContext)\n  \n  const {\n    register,\n    formState: { errors, isSubmitSuccessful },\n    handleSubmit,\n    reset,\n    getValues\n  } = useForm({\n    mode: 'onBlur'\n  })\n\n  const formSubmit = (data, e) => {\n    NProgress.start()\n    \n    loginUser(getValues('email'), getValues('password'))\n      .then(({ data }) => {\n        getUser(data)\n          .then(({ data }) => {\n            setCookie('user_id', data.id, {secure: true, 'max-age': 3600})\n            setCookie('user_info', JSON.stringify(data), {secure: true, 'max-age': 3600})\n            deleteCookie('cart_count')\n            navigate(`${prefix}account`)\n          })\n          .then(() => setIsUserLoggenin(true))\n          .then(() => NProgress.done())\n          .catch(() => {\n            showErrModal()\n            reset()\n            NProgress.done()\n          })\n      })\n      .catch(() => {\n        showErrModal()\n        reset()\n        NProgress.done()\n      })\n  }\n\n  const formError = (error, e) => {\n    console.error(error)\n  }\n\n  return (\n    <div className=\"intro-login__content intro-login-content\">\n      <div className=\"intro-login-content__inner\">\n        <div className=\"intro-login__title-wrapper title-wrapper\">\n          <h1 className=\"intro-login__title title title--big\">{loginForm.title}</h1>\n        </div>\n        <LoginSocial \n          beforeButtonsText={beforeButtonsText} \n          facebookButton={facebookButton}\n          afterButtonsText={afterButtonsText}\n          googleButton={googleButton}\n        />\n        <form className=\"intro-login__form\" onSubmit={handleSubmit(formSubmit, formError)}>\n          <div className=\"intro-login__inp-wrapper\">\n            <label className=\"intro-login__label local-title local-title--black\" htmlFor=\"login-email\">{loginForm.inputEmailLabel}</label>\n            <div className=\"intro-login__inp-inner\">\n              <input\n                className=\"intro-login__inp\"\n                id=\"login-email\"\n                type=\"text\"\n                autoComplete=\"off\"\n                {...register('email', {\n                  required: validateErrors.errEmptyEmail,\n                  pattern: {\n                    value: /\\S+@\\S+\\.\\S+/,\n                    message: validateErrors.errInvalidEmail\n                  }\n                })}\n              />\n              {errors?.email && <span className=\"intro-login__error form-error\">{errors?.email?.message}</span>}\n            </div>\n          </div>\n          <div className=\"intro-login__inp-wrapper\">\n            <label className=\"intro-login__label local-title local-title--black\" htmlFor=\"login-password\">{loginForm.inputPasswordLabel}</label>\n            <div className=\"intro-login__inp-inner\">\n              <input\n                className=\"intro-login__inp\"\n                id=\"login-password\"\n                type=\"password\"\n                autoComplete=\"off\"\n                {...register('password', {\n                  required: validateErrors.errEmptyPassword,\n                  minLength: {\n                    value: 5,\n                    message: validateErrors.errShortPassword\n                  }\n                })}\n              />\n              {errors?.password && <span className=\"intro-login__error form-error\">{errors?.password?.message}</span>}\n            </div>\n          </div>\n          <div className=\"intro-login__btn-wrapper\">\n            <button \n              className={`intro-login__btn form-btn ${isSubmitSuccessful || isUserLoggenin ? 'disabled' : ''}`} \n              type=\"submit\" \n              disabled={isSubmitSuccessful || isUserLoggenin}\n            >\n              <span>{loginForm.button}</span>\n              <span>{loginForm.button}</span>\n            </button>\n          </div>\n        </form>\n        <div className=\"intro-login__links intro-login__links--login\">\n          <Link className=\"intro-login__link intro-login__link--login\" to={`${prefix}recovery`}>{resetPasswordLink.title}</Link>\n          <Link className=\"intro-login__link intro-login__link--login\" to={`${prefix}registration`}>{createAccountLink.title}</Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginContent","import * as axios from 'axios'\n\nexport const loginUser = (email, password) => {\n  return axios({\n    method: 'post',\n    url: `${process.env.GATSBY_WP_BASE_URL}/wp-json/tehnotable/v1/login`,\n    data: {\n      email: email,\n      password: password\n    }\n  })\n}","import React, { useState, useEffect } from 'react'\nimport gsap from 'gsap'\nimport ScrollTrigger from 'gsap/ScrollTrigger'\n\nimport LoginPhoto from '../../LoginCommon/LoginPhoto'\nimport LoginContent from './LoginContent'\n\nimport '../../LoginCommon/LoginCommon.scss'\n\nimport { detectLighthouse } from '../../../utils/detectLighthouse'\n\nconst LoginIntro = ({ \n  backgroundImage, \n  loginForm, \n  resetPasswordLink,\n  beforeButtonsText,\n  afterButtonsText,\n  facebookButton,\n  googleButton,\n  createAccountLink,\n  validateErrors\n}) => {\n  let [ isMobile, setIsMobile ] = useState(false)\n\n  useEffect(() => {\n    if (!detectLighthouse()) return null\n    \n    gsap.registerPlugin(ScrollTrigger)\n\n    let introLoginTl = gsap.timeline()\n\n    ScrollTrigger.matchMedia({\n      '(min-width: 992px)': () => {\n        setIsMobile(false)\n\n        introLoginTl\n          .from('.intro-login__title', .5, { y: '100%', delay: 1, onComplete() {\n            introLoginTl.set(this.targets(), { clearProps: 'all' })\n          }})\n          .from('.intro-login__social', .5, { y: 60, opacity: 0, onComplete() {\n            introLoginTl.set(this.targets(), { clearProps: 'all' })\n          }}, '-=.2')\n          .from('.intro-login__form', .5, { y: 60, opacity: 0, onComplete() {\n            introLoginTl.set(this.targets(), { clearProps: 'all' })\n          }}, '-=.3')\n          .from('.intro-login__links--login', .5, { y: 60, opacity: 0, onComplete() {\n            introLoginTl.set(this.targets(), { clearProps: 'all' })\n          }}, '-=.3')\n      },\n      '(max-width: 991px)': () => {\n        setIsMobile(true)\n\n        introLoginTl\n          .from('.intro-login__title', .5, { y: '100%', delay: .2, onComplete() {\n            introLoginTl.set(this.targets(), { clearProps: 'all' })\n          }})\n          .from('.intro-login__social', .5, { y: 60, opacity: 0, onComplete() {\n            introLoginTl.set(this.targets(), { clearProps: 'all' })\n          }}, '-=.2')\n          .from('.intro-login__form', .5, { y: 60, opacity: 0, onComplete() {\n            introLoginTl.set(this.targets(), { clearProps: 'all' })\n          }}, '-=.3')\n          .from('.intro-login__links--login', .5, { y: 60, opacity: 0, onComplete() {\n            introLoginTl.set(this.targets(), { clearProps: 'all' })\n          }}, '-=.3')\n      }\n    })\n  }, [])\n\n  return (\n    <section className=\"intro intro-login\">\n      { !isMobile && <LoginPhoto title={loginForm.title} bgImg={backgroundImage} /> }\n      <LoginContent \n        loginForm={loginForm} \n        resetPasswordLink={resetPasswordLink} \n        beforeButtonsText={beforeButtonsText}\n        afterButtonsText={afterButtonsText}\n        facebookButton={facebookButton}\n        googleButton={googleButton}\n        createAccountLink={createAccountLink}\n        validateErrors={validateErrors}\n      />\n    </section>\n  )\n}\n\nexport default LoginIntro","import React, { useEffect } from 'react'\nimport { graphql, navigate } from 'gatsby'\nimport { Helmet } from 'react-helmet'\n\nimport Layout from '../components/Layout/Layout'\nimport Seo from '../components/seo'\nimport Breadcrumbs from '../components/Breadcrumbs/Breadcrumbs'\n\nimport LoginIntro from '../components/Login/Intro/Intro'\nimport ModalError from '../components/ModalError/ModalError'\nimport ModalCoockieMain from '../components/ModalCoockie/ModalCoockieMain'\nimport ModalCoockieSettings from '../components/ModalCoockie/ModalCoockieSettings'\n\nimport PrefixProvider from '../context/PrefixProvider'\nimport LangCodeProvider from '../context/LangCodeProvider'\n\nimport { getCurrentCategories } from '../utils/getCurrentCategories'\nimport { getCookie } from '../utils/getCookie'\n\nconst Login = ({ pageContext, data }) => {\n  useEffect(() => {\n    !!getCookie('user_id') && navigate(`${pageContext.prefix}account`)\n  }, [])\n\n  if (!!getCookie('user_id')) return null\n  \n  // Meta Data \n  const { title, metaDesc, breadcrumbs } = data.wpPage.seo\n\n  // Common Block\n  const menu = data.wpTehnotableThemeSetting.mainMenuFields\n  const header = data.wpTehnotableThemeSetting.siteHeaderFields\n  const footer = data.wpTehnotableThemeSetting.siteFooterFields\n  const cart = data.wpTehnotableThemeSetting.cartModalFields\n  const categoryList = getCurrentCategories(pageContext.categories, pageContext.wpmlLang)\n  const validateErrors = data.wpTehnotableThemeSetting.validationErrorsFields\n  const { \n    errFormSuccess,\n    coockieMain,\n    coockieSettings\n  } = data.wpTehnotableThemeSetting.thanksModalFields\n  \n  const {\n    contactsPhones,\n    contactsEmail,\n    contactsScheduleTime,\n    youtubeLink,\n    facebookLink,\n    instagramLink,\n    footerLabels\n  } = data.wpTehnotableThemeSetting.siteFooterFields\n\n  // Page Blocks\n  const {\n    beforeButtonsText,\n    afterButtonsText,\n    facebookButton,\n    googleButton\n  } = data.wpTehnotableThemeSetting.loginWithSocialFields\n\n  const {\n    backgroundImage,\n    loginForm,\n    resetPasswordLink,\n    createAccountLink\n  } = data.wpPage.loginPageFields\n\n  return (\n    <PrefixProvider prefix={pageContext.prefix}>\n      <LangCodeProvider code={pageContext.wpmlLang}>\n        <Layout\n          menu={menu}\n          header={header}\n          footer={footer}\n          cart={cart}\n          contactsPhones={contactsPhones}\n          contactsEmail={contactsEmail}\n          contactsScheduleTime={contactsScheduleTime}\n          youtubeLink={youtubeLink}\n          facebookLink={facebookLink}\n          instagramLink={instagramLink}\n          categoryList={categoryList}\n          footerLabels={footerLabels}\n        >\n          <Seo title={title} description={metaDesc} lang={pageContext.lang} />\n          <Helmet>\n            <link \n              rel=\"preload\" \n              href={backgroundImage.localFile.childImageSharp.gatsbyImageData.images.sources[0].srcSet.split(' ')[0]} \n              as=\"image\"\n            />\n          </Helmet>\n          <Breadcrumbs className=\"login-breadcrumbs\" list={breadcrumbs} />\n          <LoginIntro \n            backgroundImage={backgroundImage} \n            loginForm={loginForm}\n            resetPasswordLink={resetPasswordLink}\n            beforeButtonsText={beforeButtonsText}\n            afterButtonsText={afterButtonsText}\n            facebookButton={facebookButton}\n            googleButton={googleButton}\n            createAccountLink={createAccountLink}\n            validateErrors={validateErrors}\n          />\n        </Layout>\n        <ModalError\n          desc={errFormSuccess.mainText}\n          btn={errFormSuccess.btnText}\n        />\n         <ModalCoockieMain\n          title={coockieMain.title}\n          desc={coockieMain.desc}\n          btnSettings={coockieMain.btnSettings}\n          btnAccept={coockieMain.btnAccept}\n        />\n        <ModalCoockieSettings\n          title={coockieSettings.title}\n          subtitle={coockieSettings.subtitle}\n          required={coockieSettings.required}\n          analitics={coockieSettings.analithics}\n          personalization={coockieSettings.personalization}\n          advertisment={coockieSettings.advertisment}\n          btnAccept={coockieSettings.acceptBtn}\n          btnAcceptAll={coockieSettings.acceptAllBtn}\n        />\n      </LangCodeProvider>\n    </PrefixProvider>\n  )\n}\n\nexport const query = graphql`\n  query getLoginPage($lang: String) {\n    wpPage(locale: {locale: {eq: $lang}}, slug: {eq: \"login\"}) {\n      seo {\n        title\n        metaDesc\n        breadcrumbs {\n          text\n          url\n        }\n      }\n      title\n      uri\n      loginPageFields {\n        backgroundImage {\n          localFile {\n            childImageSharp {\n              gatsbyImageData(\n                width: 940\n                quality: 95\n                placeholder: BLURRED\n                height: 930\n                formats: [AUTO, WEBP, AVIF]\n              )\n            }\n          }\n        }\n        loginForm {\n          title\n          inputEmailLabel\n          inputPasswordLabel\n          button\n        }\n        resetPasswordLink {\n          title\n          url\n        }\n        createAccountLink {\n          title\n          url\n        }\n      }\n    }\n    wpTehnotableThemeSetting(locale: {locale: {eq: $lang}}) {\n      thanksModalFields {\n        coockieMain {\n          title\n          desc\n          btnSettings\n          btnAccept\n        }\n        coockieSettings {\n          title\n          subtitle\n          required {\n            requiredTitle\n            requiredDesc\n          }\n          analithics {\n            analithicsTitle\n            analithicsDesc\n          }\n          personalization {\n            personalizationTitle\n            personalizationDesc\n          }\n          advertisment {\n            advertismentTitle\n            advertismentDesc\n          }\n          acceptBtn\n          acceptAllBtn\n        }\n        errFormSuccess {\n          btnText\n          mainText\n        }\n      }\n      validationErrorsFields {\n        errShortMessage\n        errEmptyAddress\n        errEmptyCity\n        errEmptyDelivery\n        errEmptyEmail\n        errEmptyMessage\n        errEmptyName\n        errEmptyPassword\n        errEmptyPayment\n        errEmptyPhone\n        errEmptyRegion\n        errEmptyWarehouse\n        errEmptyStore\n        errInvalidCupon\n        errInvalidEmail\n        errInvalidLastname\n        errInvalidMiddlename\n        errInvalidName\n        errLongName\n        errNoCupon\n        errShortName\n        errShortPassword\n        fieldGroupName\n      }\n      mainMenuFields {\n        mobileMenuControls {\n          close\n          back\n        }\n        mainMenu {\n          itemName\n          itemSlug\n          submenu {\n            submenuName\n            submenuSlug\n            submenuImg {\n              localFile {\n                childImageSharp {\n                  gatsbyImageData(\n                    width: 315\n                    quality: 95\n                    placeholder: BLURRED\n                    height: 315\n                    formats: [AUTO, WEBP, AVIF]\n                  )\n                }\n              }\n            }\n          }\n        }\n      }\n      cartModalFields {\n        addToCartButton\n        cartTitle\n        cartErrTitle\n        deleteProductFromCart\n        totalPrice\n        checkoutButton {\n          title\n        }\n        catalogButton {\n          title\n        }\n        additionalInfo {\n          text\n        }\n      }\n      siteHeaderFields {\n        headerAuth {\n          personalInfo\n          orderHistory\n          logout\n        }\n        infoSlider {\n          text\n        }\n        contactPhones {\n          number\n        }\n        headerSocialList {\n          facebookLink\n          telegramLink\n          whatsappLink\n        }\n        headerLogo {\n          sourceUrl\n        }\n        searchInputPlaceholder\n        headerButtonClose\n        headerButtonSearch\n      }\n      siteFooterFields {\n        footerLabels {\n          phoneTitle\n          emailTitle\n          scheduleTitle\n          subscribeTitle\n        }\n        footerLogo {\n          sourceUrl\n        }\n        youtubeLink\n        instagramLink\n        facebookLink\n        firstColumn {\n          menuList {\n            itemLink\n            itemName\n          }\n          menuTitle\n        }\n        secondColumn {\n          menuTitle\n          menuList {\n            itemLink\n            itemName\n          }\n        }\n        thirdColumn {\n          menuTitle\n          menuList {\n            itemLink\n            itemName\n          }\n        }\n        contactsBlockTitle\n        contactsScheduleTime\n        contactsPhones {\n          number\n        }\n        contactsEmail\n        bottomLinks {\n          itemTitle\n          itemLink\n        }\n        footerCopyrightText\n      }\n      loginWithSocialFields {\n        beforeButtonsText\n        facebookButton\n        googleButton\n        afterButtonsText\n      }\n    }\n  }\n`\n\nexport default Login"],"names":["_ref","_errors$email","_errors$password","loginForm","resetPasswordLink","beforeButtonsText","afterButtonsText","facebookButton","googleButton","createAccountLink","validateErrors","isUserLoggenin","setIsUserLoggenin","useState","prefix","useContext","PrefixContext","register","formState","errors","isSubmitSuccessful","handleSubmit","reset","getValues","useForm","mode","React","className","title","LoginSocial","onSubmit","formSubmit","data","e","loginUser","email","password","NProgress","axios","method","url","process","then","_ref2","getUser","_ref3","setCookie","id","secure","JSON","stringify","deleteCookie","navigate","catch","showErrModal","formError","error","console","htmlFor","inputEmailLabel","Object","assign","type","autoComplete","required","errEmptyEmail","pattern","value","message","errInvalidEmail","inputPasswordLabel","errEmptyPassword","minLength","errShortPassword","disabled","button","Link","to","backgroundImage","isMobile","setIsMobile","useEffect","detectLighthouse","gsap","ScrollTrigger","introLoginTl","(min-width: 992px)","from","y","delay","onComplete","set","this","targets","clearProps","opacity","(max-width: 991px)","LoginPhoto","bgImg","LoginContent","pageContext","getCookie","metaDesc","breadcrumbs","wpPage","seo","menu","wpTehnotableThemeSetting","mainMenuFields","header","siteHeaderFields","footer","siteFooterFields","cart","cartModalFields","categoryList","getCurrentCategories","categories","wpmlLang","validationErrorsFields","errFormSuccess","coockieMain","coockieSettings","thanksModalFields","contactsPhones","contactsEmail","contactsScheduleTime","youtubeLink","facebookLink","instagramLink","footerLabels","loginWithSocialFields","loginPageFields","PrefixProvider","LangCodeProvider","code","Layout","Seo","description","lang","Helmet","rel","href","localFile","childImageSharp","gatsbyImageData","images","sources","srcSet","split","as","Breadcrumbs","list","LoginIntro","ModalError","desc","mainText","btn","btnText","ModalCoockieMain","btnSettings","btnAccept","ModalCoockieSettings","subtitle","analitics","analithics","personalization","advertisment","acceptBtn","btnAcceptAll","acceptAllBtn"],"sourceRoot":""}