{"version":3,"file":"component---src-templates-recovery-js-9a30e98714fcff904ef4.js","mappings":"gLA8DA,IAtDoBA,IAA0B,IAAzB,UAAEC,EAAS,KAAEC,GAAMF,EAClCG,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,GACpBC,GAAWF,EAAAA,EAAAA,YAAWG,EAAAA,GAE1B,GAAkB,2BAAdN,IAA2CC,EAAKM,MAAKC,GAAqB,WAAbA,EAAKC,MAAmB,CACvF,MAAMC,EAAO,CAAEC,KAAmB,OAAbN,GAA0C,OAAbA,EAAT,OAAsC,OAASI,IAAK,UAC7FR,EAAKW,OAAO,EAAG,EAAGF,GAGpB,OACEG,EAAAA,cAAA,OAAKb,UAAS,eAAiBA,GAC7Ba,EAAAA,cAAA,OAAKb,UAAU,aACba,EAAAA,cAAA,MAAIb,UAAU,qCAAqCc,OAAO,iBAAiBC,MAAM,uBAC7Ed,EAAKe,KAAI,CAACR,EAAMS,KAChB,IAAIR,EAAMP,EAASM,EAAKC,IAAIS,QAAQ,sEAAuE,IAO3G,OANAT,EAAMA,EAAIS,QAAQ,WAAY,KAE3BT,EAAIU,OAAS,IACdV,EAAMA,EAAIS,QAAQ,MAAO,KAIzBL,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,MAAIb,UAAU,yBAAyBoB,IAAKH,EAAOI,SAAS,kBAAkBP,OAAO,YAEjFG,EAAQ,IAAMhB,EAAKkB,OACfN,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACS,EAAAA,KAAI,CAACtB,UAAU,yBAAyBuB,GAAE,GAAKd,EAAOY,SAAS,OAAOP,OAAO,WAC5ED,EAAAA,cAAA,QAAMQ,SAAS,QAAQb,EAAKG,OAE9BE,EAAAA,cAAA,QAAMQ,SAAS,WAAWG,QAASP,EAAQ,KAE7CJ,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QAAMb,UAAU,4BAA4BqB,SAAS,QAAQb,EAAKG,MAClEE,EAAAA,cAAA,QAAMQ,SAAS,MAAMG,QAASf,IAC9BI,EAAAA,cAAA,QAAMQ,SAAS,WAAWG,QAASP,EAAQ,MAKnDA,EAAQ,IAAMhB,EAAKkB,QACdN,EAAAA,cAAA,MAAIb,UAAU,0BACba,EAAAA,cAAA,QAAMb,UAAU,0C,sDCrBxC,IAxBmBD,IAAuB,IAAtB,MAAE0B,EAAK,MAAEC,GAAO3B,GAClC4B,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAAeC,EAAAA,GAAAA,WAQnB,OANAD,EACGL,GAAG,qBAAsB,IAAK,CAAEO,MAAO,GAAIC,SAAU,0CAA2CC,KAAM,mBACtGC,KAAK,2CAA4C,GAAI,CAAEC,MAAO,IAAKC,QAAS,GAAIC,aAC/ER,EAAaS,IAAIC,KAAKC,UAAW,CAAEC,WAAY,UAC7C,OAEC,KACLZ,EAAaa,UAEd,IAEH,MAAMC,GAAQC,EAAAA,EAAAA,GAASjB,EAAMkB,WAE7B,OACE/B,EAAAA,cAAA,OAAKb,UAAU,wCACba,EAAAA,cAACgC,EAAAA,EAAW,CAACH,MAAOA,EAAOI,IAAKrB,EAAOsB,QAAQ,a,+NCkKrD,MA5KwBhD,IASjB,IAADiD,EAAAC,EAAA,IATmB,kBACvBC,EAAiB,eACjBC,EAAc,WACdC,EAAU,eACVC,EAAc,aACdC,EAAY,WACZC,EAAU,uBACVC,EAAsB,eACtBC,GACD1D,EACKG,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,GAExB,MAAM,EAAEsD,EAAW,EAACC,IAAkBC,EAAAA,EAAAA,WAAS,IACzC,EAAEC,EAAU,EAACC,IAAiBF,EAAAA,EAAAA,WAAS,IACvC,EAAEG,EAAgB,EAACC,IAAuBJ,EAAAA,EAAAA,WAAS,IAEzDjC,EAAAA,EAAAA,YAAU,KACR,KAAKsC,EAAAA,EAAAA,KAAa,OAAO,KAErBC,OAAOC,SAASC,OAAOC,MAAM,SAAWH,OAAOC,SAASC,OAAOC,MAAM,QACvEL,GAAmB,KAEpB,IAEH,MAAM,SACJM,EACAC,WAAW,OAAEC,EAAM,mBAAEC,GAAoB,aACzCC,EAAY,UACZC,IACEC,EAAAA,EAAAA,IAAQ,CACVC,KAAM,WAGFC,EAAaA,CAACC,EAAMC,KACxBC,IAAAA,QAEA,MAAMC,GAAKjB,EAAAA,EAAAA,MAAeC,OAAOC,SAASC,OAAOC,MAAM,SAAWH,OAAOC,SAASC,OAAOC,MAAM,QAAUH,OAAOC,SAASC,OAAOe,MAAM,GAAGC,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC5JhE,GAAM6C,EAAAA,EAAAA,MAAeC,OAAOC,SAASC,OAAOC,MAAM,SAAWH,OAAOC,SAASC,OAAOC,MAAM,QAAUH,OAAOC,SAASC,OAAOe,MAAM,GAAGC,MAAM,KAAK,GAAGA,MAAM,KAAK,GCjDzIC,IAAAA,EDmDzBtB,EEnDwBuB,EAACJ,EAAI9D,EAAKmE,IAC9BC,EAAM,CACXC,OAAQ,OACRhF,IAAQiF,kEACRX,KAAM,CACJG,GAAIS,SAAST,GACb9D,IAAKA,EACLmE,SAAUA,KFyDRD,CAAcJ,EAAI9D,EAAKuD,EAAU,aAChCiB,MAAK,IAAMjC,GAAc,KACzBiC,MAAK,KACJ/D,EAAAA,GAAAA,KAAU,kCAAmC,GAAI,CAAEgE,EAAG,GAAIC,QAAS,EAAGhE,MAAO,GAAIM,aAC/EP,EAAAA,GAAAA,IAASS,KAAKC,UAAW,CAAEC,WAAY,WAExCoD,MAAK,IAAMX,IAAAA,YAEbc,OAAM,KACLjC,GAAa,GACbmB,IAAAA,WC1EoBI,EDoDPV,EAAU,SCnDxBa,EAAM,CACXC,OAAQ,OACRhF,IAAQiF,mEACRX,KAAM,CACJM,MAAOA,MDgDJO,MAAK,IAAMjC,GAAc,KACzBiC,MAAK,KACJ/D,EAAAA,GAAAA,KAAU,kCAAmC,GAAI,CAAEgE,EAAG,GAAIC,QAAS,EAAGhE,MAAO,GAAIM,aAC/EP,EAAAA,GAAAA,IAASS,KAAKC,UAAW,CAAEC,WAAY,WAExCoD,MAAK,IAAMX,IAAAA,YAEbc,OAAM,KACLjC,GAAa,GACbmB,IAAAA,WAgBFe,EAAYA,CAACC,EAAOjB,KACxBkB,QAAQD,MAAMA,IAGhB,OACEpF,EAAAA,cAAA,OAAKb,UAAU,4CACba,EAAAA,cAAA,OAAKb,UAAU,+BAEV0D,GAAcG,IAAchD,EAAAA,cAAA,OAAKb,UAAU,qBAC1Ca,EAAAA,cAAA,OAAKb,UAAU,qCACba,EAAAA,cAAA,OAAKsF,QAAQ,cAAcC,QAAQ,OACjCvF,EAAAA,cAAA,KAAGqE,GAAG,cAAcmB,OAAO,OAAOC,YAAY,IAAIC,KAAK,OAAOC,SAAS,WACrE3F,EAAAA,cAAA,UAAQqE,GAAG,gBAAgBqB,KAAK,OAAOE,GAAG,OAAOC,GAAG,OAAOC,EAAE,SAC7D9F,EAAAA,cAAA,UAAQqE,GAAG,eAAeqB,KAAK,UAAUE,GAAG,OAAOC,GAAG,OAAOC,EAAE,SAC/D9F,EAAAA,cAAA,UAAQqE,GAAG,UAAUmB,OAAO,OAAOC,YAAY,IAAIG,GAAG,OAAOC,GAAG,OAAOC,EAAE,UACtE9C,GAAahD,EAAAA,cAAA,YAAUqE,GAAG,QAAQmB,OAAO,UAAUC,YAAY,IAAIM,OAAO,wBAG/E/C,GAAahD,EAAAA,cAAAA,EAAAA,SAAA,KAAEA,EAAAA,cAAA,aAAaA,EAAAA,cAAA,eAEhCA,EAAAA,cAAA,OAAKb,UAAU,iDACba,EAAAA,cAAA,OAAKb,UAAU,4CACX6D,EAAyEN,EAA5DQ,EAAmCP,EAAjBH,MAMrCK,IAAeG,GAAchD,EAAAA,cAAA,OAAKb,UAAU,4CAC5Ca,EAAAA,cAAA,MAAIb,UAAU,uCAAuCkD,EAAkBzB,QAIxEsC,GA8BKL,IAAeG,GAAchD,EAAAA,cAAA,QAAMb,UAAU,oBAAoB6G,SAAUnC,EAAaI,EAAYkB,IACpGnF,EAAAA,cAAA,OAAKb,UAAU,4BACba,EAAAA,cAAA,SAAOb,UAAU,oDAAoD8G,QAAQ,kBAAkB5D,EAAkB6D,oBACjHlG,EAAAA,cAAA,OAAKb,UAAU,0BACba,EAAAA,cAAA,QAAAmG,OAAAC,OAAA,CACEjH,UAAU,mBACVkF,GAAG,iBACHgC,KAAK,WACLC,aAAa,OACT7C,EAAS,WAAY,CACvB8C,SAAU3D,EAAe4D,iBACzBC,UAAW,CACTC,MAAO,EACPC,QAAS/D,EAAegE,uBAI7BjD,MAAAA,OAAM,EAANA,EAAQe,WAAY1E,EAAAA,cAAA,QAAMb,UAAU,iCAAiCwE,MAAAA,GAAgB,QAAVvB,EAANuB,EAAQe,gBAAQ,IAAAtC,OAAV,EAANA,EAAkBuE,WAG5F3G,EAAAA,cAAA,OAAKb,UAAU,4BACba,EAAAA,cAAA,UACEb,UAAS,8BAA+ByE,EAAqB,WAAa,IAAMyC,KAAK,SAASQ,SAAUjD,GACxG5D,EAAAA,cAAA,YAAOqC,EAAkByE,QACzB9G,EAAAA,cAAA,YAAOqC,EAAkByE,YArD7BjE,IAAeG,GAAchD,EAAAA,cAAA,QAAMb,UAAU,oBAAoB6G,SAAUnC,EAAaI,EAAYkB,IACpGnF,EAAAA,cAAA,OAAKb,UAAU,4BACba,EAAAA,cAAA,SAAOb,UAAU,oDAAoD8G,QAAQ,eAAe5D,EAAkB0E,iBAC9G/G,EAAAA,cAAA,OAAKb,UAAU,0BACba,EAAAA,cAAA,QAAAmG,OAAAC,OAAA,CACEjH,UAAU,mBACVkF,GAAG,cACHgC,KAAK,OACLC,aAAa,OACT7C,EAAS,QAAS,CACpB8C,SAAU3D,EAAeoE,cACzBC,QAAS,CACPP,MAAO,eACPC,QAAS/D,EAAesE,sBAI7BvD,MAAAA,OAAM,EAANA,EAAQa,QAASxE,EAAAA,cAAA,QAAMb,UAAU,iCAAiCwE,MAAAA,GAAa,QAAPxB,EAANwB,EAAQa,aAAK,IAAArC,OAAP,EAANA,EAAewE,WAGtF3G,EAAAA,cAAA,OAAKb,UAAU,4BACba,EAAAA,cAAA,UACEb,UAAS,8BAA+ByE,EAAqB,WAAa,IAAMyC,KAAK,SAASQ,SAAUjD,GAExG5D,EAAAA,cAAA,YAAOqC,EAAkB8E,aACzBnH,EAAAA,cAAA,YAAOqC,EAAkB8E,iBAkCjCtE,IAAeG,GAAchD,EAAAA,cAAA,OAAKb,UAAU,mDAC5Ca,EAAAA,cAAA,QAAMb,UAAU,qBAAqBmD,GACrCtC,EAAAA,cAACS,EAAAA,KAAI,CAACtB,UAAU,gDAAgDuB,GAAOrB,EAAM,SAAUoD,EAAa7B,QAGxGZ,EAAAA,cAAA,OAAKb,UAAU,kCACba,EAAAA,cAACS,EAAAA,KAAI,CAACtB,UAAU,yBAAyBuB,GAAE,GAAKrB,GAAWkD,O,UG7FrE,MA3EsBrD,IAUf,IAVgB,gBACrBkI,EAAe,kBACf/E,EAAiB,eACjBC,EAAc,WACdC,EAAU,eACVC,EAAc,aACdC,EAAY,WACZC,EAAU,uBACVC,EAAsB,eACtBC,GACD1D,GACK,EAAEmI,EAAS,EAACC,IAAgBvE,EAAAA,EAAAA,WAAS,GA+CzC,OA7CAjC,EAAAA,EAAAA,YAAU,KACR,KAAKyG,EAAAA,EAAAA,KAAoB,OAAO,KAEhCvG,EAAAA,GAAAA,eAAoBwG,EAAAA,GAEpB,IAAIC,EAAkBzG,EAAAA,GAAAA,WAEtBwG,EAAAA,EAAAA,WAAyB,CACvB,qBAAsBE,KACpBJ,GAAY,GAEZG,EACGrG,KAAK,sBAAuB,GAAI,CAAE4D,EAAG,OAAQ/D,MAAO,EAAGM,aACtDkG,EAAgBjG,IAAIC,KAAKC,UAAW,CAAEC,WAAY,WAEnDP,KAAK,qBAAsB,GAAI,CAAE4D,EAAG,GAAIC,QAAS,EAAG1D,aACnDkG,EAAgBjG,IAAIC,KAAKC,UAAW,CAAEC,WAAY,UAChD,QACHP,KAAK,gCAAiC,GAAI,CAAE4D,EAAG,GAAIC,QAAS,EAAG1D,aAC9DkG,EAAgBjG,IAAIC,KAAKC,UAAW,CAAEC,WAAY,UAChD,QACHP,KAAK,kCAAmC,GAAI,CAAE4D,EAAG,GAAIC,QAAS,EAAG1D,aAChEkG,EAAgBjG,IAAIC,KAAKC,UAAW,CAAEC,WAAY,UAChD,SAER,qBAAsBgG,KACpBL,GAAY,GAEZG,EACGrG,KAAK,sBAAuB,GAAI,CAAE4D,EAAG,OAAQ/D,MAAO,GAAIM,aACvDkG,EAAgBjG,IAAIC,KAAKC,UAAW,CAAEC,WAAY,WAEnDP,KAAK,qBAAsB,GAAI,CAAE4D,EAAG,GAAIC,QAAS,EAAG1D,aACnDkG,EAAgBjG,IAAIC,KAAKC,UAAW,CAAEC,WAAY,UAChD,QACHP,KAAK,gCAAiC,GAAI,CAAE4D,EAAG,GAAIC,QAAS,EAAG1D,aAC9DkG,EAAgBjG,IAAIC,KAAKC,UAAW,CAAEC,WAAY,UAChD,QACHP,KAAK,kCAAmC,GAAI,CAAE4D,EAAG,GAAIC,QAAS,EAAG1D,aAChEkG,EAAgBjG,IAAIC,KAAKC,UAAW,CAAEC,WAAY,UAChD,aAGT,IAGD3B,EAAAA,cAAA,WAASb,UAAU,sBACdkI,GAAYrH,EAAAA,cAAC4H,EAAAA,EAAU,CAAChH,MAAOyB,EAAkBzB,MAAOC,MAAOuG,IAClEpH,EAAAA,cAAC6H,EAAe,CACdxF,kBAAmBA,EACnBC,eAAgBA,EAChBC,WAAYA,EACZC,eAAgBA,EAChBC,aAAcA,EACdC,WAAYA,EACZC,uBAAwBA,EACxBC,eAAgBA,M,kDCmQxB,MAjUiB1D,IAA4B,IAA3B,YAAE4I,EAAW,KAAE5D,GAAMhF,EAKrC,IAJA4B,EAAAA,EAAAA,YAAU,MACNiH,EAAAA,EAAAA,GAAU,aAAcC,EAAAA,EAAAA,UAAYF,EAAYzI,OAAM,aACvD,KAEG0I,EAAAA,EAAAA,GAAU,WAAY,OAAO,KAGnC,MAAM,MAAEnH,EAAK,SAAEqH,EAAQ,YAAEC,GAAgBhE,EAAKiE,OAAOC,IAG/CC,EAAOnE,EAAKoE,yBAAyBC,eACrCC,EAAStE,EAAKoE,yBAAyBG,iBACvCC,EAASxE,EAAKoE,yBAAyBK,iBACvCC,EAAO1E,EAAKoE,yBAAyBO,gBACrCC,GAAeC,EAAAA,EAAAA,GAAqBjB,EAAYkB,WAAYlB,EAAYmB,UACxErG,EAAiBsB,EAAKoE,yBAAyBY,wBAC/C,YACJC,EAAW,gBACXC,GACElF,EAAKoE,yBAAyBe,mBAE5B,eACJC,EAAc,cACdC,EAAa,qBACbC,EAAoB,YACpBC,EAAW,aACXC,EAAY,cACZC,EAAa,aACbC,GACE1F,EAAKoE,yBAAyBK,kBAG5B,gBACJvB,EAAe,kBACf/E,EAAiB,eACjBC,EAAc,WACdC,EAAU,eACVC,EAAc,aACdC,EAAY,WACZC,EAAU,uBACVC,GACEuB,EAAKiE,OAAO0B,wBAEhB,OACE7J,EAAAA,cAAC8J,EAAAA,EAAc,CAACzK,OAAQyI,EAAYzI,QAClCW,EAAAA,cAAC+J,EAAAA,EAAgB,CAACC,KAAMlC,EAAYmB,UAClCjJ,EAAAA,cAACiK,EAAAA,EAAM,CACL5B,KAAMA,EACNG,OAAQA,EACRE,OAAQA,EACRE,KAAMA,EACNU,eAAgBA,EAChBC,cAAeA,EACfC,qBAAsBA,EACtBC,YAAaA,EACbC,aAAcA,EACdC,cAAeA,EACfb,aAAcA,EACdc,aAAcA,GAEd5J,EAAAA,cAACkK,EAAAA,EAAG,CAACtJ,MAAOA,EAAOuJ,YAAalC,EAAUmC,KAAMtC,EAAYsC,OAC5DpK,EAAAA,cAACqK,EAAAA,EAAM,KACLrK,EAAAA,cAAA,QACEsK,IAAI,UACJC,KAAMnD,EAAgBrF,UAAUyI,gBAAgBC,gBAAgBC,OAAOC,QAAQ,GAAGC,OAAOrG,MAAM,KAAK,GACpGsG,GAAG,WAGP7K,EAAAA,cAAC8K,EAAAA,EAAW,CAAC3L,UAAU,uBAAuBC,KAAM8I,IACpDlI,EAAAA,cAAC+K,EAAa,CACZ3D,gBAAiBA,EACjB/E,kBAAmBA,EACnBC,eAAgBA,EAChBC,WAAYA,EACZC,eAAgBA,EAChBC,aAAcA,EACdC,WAAYA,EACZC,uBAAwBA,EACxBC,eAAgBA,IAElB5C,EAAAA,cAACgL,EAAAA,EAAgB,CACfpK,MAAOuI,EAAYvI,MACnBqK,KAAM9B,EAAY8B,KAClBC,YAAa/B,EAAY+B,YACzBC,UAAWhC,EAAYgC,YAEzBnL,EAAAA,cAACoL,EAAAA,EAAoB,CACnBxK,MAAOwI,EAAgBxI,MACvByK,SAAUjC,EAAgBiC,SAC1B9E,SAAU6C,EAAgB7C,SAC1B+E,UAAWlC,EAAgBmC,WAC3BC,gBAAiBpC,EAAgBoC,gBACjCC,aAAcrC,EAAgBqC,aAC9BN,UAAW/B,EAAgBsC,UAC3BC,aAAcvC,EAAgBwC,oB,mEC/GnC,MAAMrE,EAAmBA,KAAMnE,EAAAA,EAAAA,OAA4E,IAA7DC,OAAOwI,UAAUC,UAAUC,QAAQ,sB,qDCFjF,MAAMhD,EAAuBA,CAACC,EAAYoB,IAASpB,EAAWgD,QAAOC,GAA8B,kBAAlBA,EAASC,MAA4BD,EAAS7B,OAASA","sources":["webpack://gatsby-starter-default/./src/components/Breadcrumbs/Breadcrumbs.js","webpack://gatsby-starter-default/./src/components/LoginCommon/LoginPhoto.js","webpack://gatsby-starter-default/./src/components/Recovery/Intro/RecoveryContent.js","webpack://gatsby-starter-default/./src/auth/forgotPassword.js","webpack://gatsby-starter-default/./src/auth/resetPassword.js","webpack://gatsby-starter-default/./src/components/Recovery/Intro/Intro.js","webpack://gatsby-starter-default/./src/templates/Recovery.js","webpack://gatsby-starter-default/./src/utils/detectLighthouse.js","webpack://gatsby-starter-default/./src/utils/getCurrentCategories.js"],"sourcesContent":["import React, { useContext } from 'react'\nimport { Link } from 'gatsby'\n\nimport './Breadcrumbs.scss'\n\nimport { PrefixContext } from '../../context/PrefixProvider'\nimport { LangCodeContext } from '../../context/LangCodeProvider'\n\nconst Breadcrumbs = ({ className, list }) => {\n  let prefix = useContext(PrefixContext)\n  let langCode = useContext(LangCodeContext)\n\n  if (className === 'sinle-post-breadcrumbs' && !list.some(item => item.url === '/blog/')) {\n    const blog = { text: langCode === 'uk' ? 'Блог' : langCode === 'ru' ? 'Блог' : 'Blog' , url: '/blog/' }\n    list.splice(1, 0, blog)\n  }\n\n  return (\n    <nav className={`breadcrumbs ${className}`}>\n      <div className=\"container\">\n        <ul className=\"breadcrumbs__list breadcrumbs-list\" typeof=\"BreadcrumbList\" vocab=\"https://schema.org/\">\n          { list.map((item, index) => {\n            let url = prefix + item.url.replace(/(\\/ru)|(\\/en)|(\\/product-category\\/)|(\\/catalog\\/)|(\\/category\\/)/gm, '')\n            url = url.replace(/(\\/\\/)/gm, '/')\n\n            if(url.length > 1){\n              url = url.replace(/\\/$/, '')\n            }\n\n            return (\n              <>\n                <li className=\"breadcrumbs-list__item\" key={index} property=\"itemListElement\" typeof=\"ListItem\">\n                  { \n                    index + 1 !== list.length\n                      ? <>\n                          <Link className=\"breadcrumbs-list__link\" to={`${url}`} property=\"item\" typeof=\"WebPage\">\n                            <span property=\"name\">{item.text}</span>\n                          </Link>\n                          <meta property=\"position\" content={index + 1}></meta>\n                        </>\n                      : <>\n                          <span className=\"breadcrumbs-list__current\" property=\"name\">{item.text}</span>\n                          <meta property=\"url\" content={url} />\n                          <meta property=\"position\" content={index + 1} />\n                        </>\n                  }\n                </li>\n                {\n                  index + 1 !== list.length\n                    && <li className=\"breadcrumbs-list__item\">\n                        <span className=\"breadcrumbs-list__separator\" />\n                      </li>\n                }\n              </>\n            )\n          }) }\n        </ul>\n      </div>\n    </nav>\n  )\n}\n\nexport default Breadcrumbs","import React, { useEffect } from 'react'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport gsap from 'gsap'\n\n\nconst LoginPhoto = ({ title, bgImg }) => {\n  useEffect(() => {\n    let LoginPhotoTl = gsap.timeline()\n\n    LoginPhotoTl\n      .to('.intro-login-photo', 1.5, { delay: .2, clipPath: 'polygon(0 0, 100% 0, 100% 100%, 0 100%)', ease: 'Expo.easeInOut'})\n      .from('.intro-login-photo .gatsby-image-wrapper', .8, { scale: 1.3, stagger: .1, onComplete() {\n        LoginPhotoTl.set(this.targets(), { clearProps: 'all' })\n      }}, '-=1')\n\n    return () => {\n      LoginPhotoTl.kill()\n    }\n  }, [])\n\n  const image = getImage(bgImg.localFile)\n\n  return (\n    <div className=\"intro-login__photo intro-login-photo\">\n      <GatsbyImage image={image} alt={title} loading=\"eager\" />\n    </div>\n  )\n}\n\nexport default LoginPhoto","import React, { useState, useContext, useEffect } from 'react'\nimport { Link } from 'gatsby'\nimport { useForm } from 'react-hook-form'\nimport gsap from 'gsap'\nimport NProgress from 'nprogress'\nimport 'nprogress/nprogress.css'\n\nimport { PrefixContext } from './../../../context/PrefixProvider'\n\nimport { forgotPassword } from '../../../auth/forgotPassword'\nimport { resetPassword } from '../../../auth/resetPassword'\n\nimport { isBrowser } from '../../../utils/isBrowser'\n\nconst RecoveryContent = ({\n  resetPasswordForm,\n  textBeforeLink,\n  backToHome,\n  successMessage,\n  loginPageUrl,\n  errMessage,\n  successPasswordMessage,\n  validateErrors\n}) => {\n  let prefix = useContext(PrefixContext)\n\n  const [ isFormSent, setIsFormSent ] = useState(false)\n  const [ isFormErr, setIsFormErr ] = useState(false)\n  const [ isSubmitedEmail, setIsSubmitedEmail ] = useState(false)\n\n  useEffect(() => {\n    if (!isBrowser()) return null\n\n    if (window.location.search.match('key=') && window.location.search.match('id=')) {\n      setIsSubmitedEmail(true)\n    }\n  }, [])\n  \n  const {\n    register,\n    formState: { errors, isSubmitSuccessful },\n    handleSubmit,\n    getValues\n  } = useForm({\n    mode: 'onBlur'\n  })\n\n  const formSubmit = (data, e) => {\n    NProgress.start()\n\n    const id = isBrowser() && window.location.search.match('key=') && window.location.search.match('id=') && window.location.search.slice(1).split('&')[1].split('=')[1]\n    const key = isBrowser() && window.location.search.match('key=') && window.location.search.match('id=') && window.location.search.slice(1).split('&')[0].split('=')[1]\n    \n    !isSubmitedEmail\n      ? forgotPassword(getValues('email'))\n        .then(() => setIsFormSent(true))\n        .then(() => {\n          gsap.from('.intro-login__link-back-wrapper', .5, { y: 60, opacity: 0, delay: .5, onComplete() {\n            gsap.set(this.targets(), { clearProps: 'all' })\n          }})\n          .then(() => NProgress.done())\n        })\n        .catch(() => {\n          setIsFormErr(true)\n          NProgress.done()\n        })\n      : resetPassword(id, key, getValues('password'))\n        .then(() => setIsFormSent(true))\n        .then(() => {\n          gsap.from('.intro-login__link-back-wrapper', .5, { y: 60, opacity: 0, delay: .5, onComplete() {\n            gsap.set(this.targets(), { clearProps: 'all' })\n          }})\n          .then(() => NProgress.done())\n        })\n        .catch(() => {\n          setIsFormErr(true)\n          NProgress.done()\n        })\n  }\n\n  const formError = (error, e) => {\n    console.error(error)\n  }\n\n  return (\n    <div className=\"intro-login__content intro-login-content\">\n      <div className=\"intro-login-content__inner\">\n        {\n          (isFormSent || isFormErr) && <div className=\"intro-login__sent\">\n            <div className=\"intro-login__sent-icon check-icon\">\n              <svg viewBox=\"0 0 133 133\" version=\"1.1\">\n                <g id=\"check-group\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n                  <circle id=\"filled-circle\" fill=\"#000\" cx=\"66.5\" cy=\"66.5\" r=\"54.5\" />\n                  <circle id=\"white-circle\" fill=\"#FFFFFF\" cx=\"66.5\" cy=\"66.5\" r=\"55.5\" />\n                  <circle id=\"outline\" stroke=\"#000\" strokeWidth=\"4\" cx=\"66.5\" cy=\"66.5\" r=\"54.5\" />\n                  { !isFormErr && <polyline id=\"check\" stroke=\"#FFFFFF\" strokeWidth=\"4\" points=\"41 70 56 85 92 49\" /> }\n                </g>\n              </svg>\n              { isFormErr && <><span></span><span></span></> }\n            </div>\n            <div className=\"intro-login__sent-title-wrapper title-wrapper\">\n              <div className=\"intro-login__sent-title title title--big\">\n                {!isFormErr ? !isSubmitedEmail ? successMessage : successPasswordMessage : errMessage}\n              </div>\n            </div>\n          </div>\n        }\n        {\n          (!isFormSent && !isFormErr) && <div className=\"intro-login__title-wrapper title-wrapper\">\n            <h1 className=\"intro-login__title title title--big\">{resetPasswordForm.title}</h1>\n          </div>\n        }\n        {\n          !isSubmitedEmail\n            ? (!isFormSent && !isFormErr) && <form className=\"intro-login__form\" onSubmit={handleSubmit(formSubmit, formError)}>\n                <div className=\"intro-login__inp-wrapper\">\n                  <label className=\"intro-login__label local-title local-title--black\" htmlFor=\"login-email\">{resetPasswordForm.inputEmailLabel}</label>\n                  <div className=\"intro-login__inp-inner\">\n                    <input\n                      className=\"intro-login__inp\"\n                      id=\"login-email\"\n                      type=\"text\"\n                      autoComplete=\"off\"\n                      {...register('email', {\n                        required: validateErrors.errEmptyEmail,\n                        pattern: {\n                          value: /\\S+@\\S+\\.\\S+/,\n                          message: validateErrors.errInvalidEmail\n                        }\n                      })}\n                    />\n                    {errors?.email && <span className=\"intro-login__error form-error\">{errors?.email?.message}</span>}\n                  </div>\n                </div>\n                <div className=\"intro-login__btn-wrapper\">\n                  <button\n                    className={`intro-login__btn form-btn ${isSubmitSuccessful ? 'disabled' : ''}`} type=\"submit\" disabled={isSubmitSuccessful}\n                  >\n                    <span>{resetPasswordForm.buttonEmail}</span>\n                    <span>{resetPasswordForm.buttonEmail}</span>\n                  </button>\n                </div>\n              </form>\n            : (!isFormSent && !isFormErr) && <form className=\"intro-login__form\" onSubmit={handleSubmit(formSubmit, formError)}>\n                <div className=\"intro-login__inp-wrapper\">\n                  <label className=\"intro-login__label local-title local-title--black\" htmlFor=\"login-password\">{resetPasswordForm.inputPasswordLabel}</label>\n                  <div className=\"intro-login__inp-inner\">\n                    <input\n                      className=\"intro-login__inp\"\n                      id=\"login-password\"\n                      type=\"password\"\n                      autoComplete=\"off\"\n                      {...register('password', {\n                        required: validateErrors.errEmptyPassword,\n                        minLength: {\n                          value: 5,\n                          message: validateErrors.errShortPassword\n                        }\n                      })}\n                    />\n                    {errors?.password && <span className=\"intro-login__error form-error\">{errors?.password?.message}</span>}\n                  </div>\n                </div>\n                <div className=\"intro-login__btn-wrapper\">\n                  <button\n                    className={`intro-login__btn form-btn ${isSubmitSuccessful ? 'disabled' : ''}`} type=\"submit\" disabled={isSubmitSuccessful}>\n                    <span>{resetPasswordForm.button}</span>\n                    <span>{resetPasswordForm.button}</span>\n                  </button>\n                </div>\n              </form>\n        }\n        {\n          (!isFormSent && !isFormErr) && <div className=\"intro-login__links intro-login__links--recovery\">\n            <span className=\"intro-login__text\">{textBeforeLink}</span>\n            <Link className=\"intro-login__link intro-login__link--recovery\" to={`${prefix}login`}>{loginPageUrl.title}</Link>\n          </div>\n        }\n        <div className=\"intro-login__link-back-wrapper\">\n          <Link className=\"intro-login__link-back\" to={`${prefix}`}>{backToHome}</Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RecoveryContent","import * as axios from 'axios'\n\nexport const forgotPassword = email => {\n  return axios({\n    method: 'post',\n    url: `${process.env.GATSBY_WP_BASE_URL}/wp-json/tehnotable/v1/forgot_password`,\n    data: {\n      email: email\n    }\n  })\n}","import * as axios from 'axios'\n\nexport const resetPassword = (id, key, password) => {\n  return axios({\n    method: 'post',\n    url: `${process.env.GATSBY_WP_BASE_URL}/wp-json/tehnotable/v1/reset_password`,\n    data: {\n      id: parseInt(id),\n      key: key,\n      password: password\n    }\n  })\n}","import React, { useState, useEffect } from 'react'\nimport gsap from 'gsap'\nimport ScrollTrigger from 'gsap/ScrollTrigger'\n\nimport LoginPhoto from '../../LoginCommon/LoginPhoto'\nimport RecoveryContent from './RecoveryContent'\n\nimport '../../LoginCommon/LoginCommon.scss'\n\nimport { detectLighthouse } from '../../../utils/detectLighthouse'\n\nconst RecoveryIntro = ({\n  backgroundImage,\n  resetPasswordForm,\n  textBeforeLink,\n  backToHome,\n  successMessage,\n  loginPageUrl,\n  errMessage,\n  successPasswordMessage,\n  validateErrors\n}) => {\n  let [ isMobile, setIsMobile ] = useState(false)\n\n  useEffect(() => {\n    if (!detectLighthouse()) return null\n\n    gsap.registerPlugin(ScrollTrigger)\n\n    let introRecoveryTl = gsap.timeline()\n    \n    ScrollTrigger.matchMedia({\n      '(min-width: 992px)': () => {\n        setIsMobile(false)\n\n        introRecoveryTl\n          .from('.intro-login__title', .5, { y: '100%', delay: 1, onComplete() {\n            introRecoveryTl.set(this.targets(), { clearProps: 'all' })\n          }})\n          .from('.intro-login__form', .5, { y: 60, opacity: 0, onComplete() {\n            introRecoveryTl.set(this.targets(), { clearProps: 'all' })\n          }}, '-=.3')\n          .from('.intro-login__links--recovery', .5, { y: 60, opacity: 0, onComplete() {\n            introRecoveryTl.set(this.targets(), { clearProps: 'all' })\n          }}, '-=.3')\n          .from('.intro-login__link-back-wrapper', .5, { y: 60, opacity: 0, onComplete() {\n            introRecoveryTl.set(this.targets(), { clearProps: 'all' })\n          }}, '-=.3')\n      },\n      '(max-width: 991px)': () => {\n        setIsMobile(true)\n\n        introRecoveryTl\n          .from('.intro-login__title', .5, { y: '100%', delay: .2, onComplete() {\n            introRecoveryTl.set(this.targets(), { clearProps: 'all' })\n          }})\n          .from('.intro-login__form', .5, { y: 60, opacity: 0, onComplete() {\n            introRecoveryTl.set(this.targets(), { clearProps: 'all' })\n          }}, '-=.3')\n          .from('.intro-login__links--recovery', .5, { y: 60, opacity: 0, onComplete() {\n            introRecoveryTl.set(this.targets(), { clearProps: 'all' })\n          }}, '-=.3')\n          .from('.intro-login__link-back-wrapper', .5, { y: 60, opacity: 0, onComplete() {\n            introRecoveryTl.set(this.targets(), { clearProps: 'all' })\n          }}, '-=.3')\n      }\n    })\n  }, [])\n\n  return (\n    <section className=\"intro intro-login\">\n      { !isMobile && <LoginPhoto title={resetPasswordForm.title} bgImg={backgroundImage} /> }\n      <RecoveryContent \n        resetPasswordForm={resetPasswordForm}\n        textBeforeLink={textBeforeLink}\n        backToHome={backToHome}\n        successMessage={successMessage}\n        loginPageUrl={loginPageUrl}\n        errMessage={errMessage}\n        successPasswordMessage={successPasswordMessage}\n        validateErrors={validateErrors}\n      />\n    </section>\n  )\n}\n\nexport default RecoveryIntro","import React, { useEffect } from 'react'\nimport { graphql, navigate } from 'gatsby'\nimport { Helmet } from 'react-helmet'\n\nimport Layout from '../components/Layout/Layout'\nimport Seo from '../components/seo'\nimport Breadcrumbs from '../components/Breadcrumbs/Breadcrumbs'\n\nimport RecoveryIntro from '../components/Recovery/Intro/Intro'\nimport ModalCoockieMain from '../components/ModalCoockie/ModalCoockieMain'\nimport ModalCoockieSettings from '../components/ModalCoockie/ModalCoockieSettings'\n\nimport PrefixProvider from '../context/PrefixProvider'\nimport LangCodeProvider from '../context/LangCodeProvider'\n\nimport { getCurrentCategories } from '../utils/getCurrentCategories'\nimport { getCookie } from '../utils/getCookie'\n\nconst Recovery = ({ pageContext, data }) => {\n  useEffect(() => {\n    !!getCookie('user_id') && navigate(`${pageContext.prefix}account`)\n  }, [])\n\n  if (!!getCookie('user_id')) return null\n  \n  // Meta Data \n  const { title, metaDesc, breadcrumbs } = data.wpPage.seo\n\n  // Common Block\n  const menu = data.wpTehnotableThemeSetting.mainMenuFields\n  const header = data.wpTehnotableThemeSetting.siteHeaderFields\n  const footer = data.wpTehnotableThemeSetting.siteFooterFields\n  const cart = data.wpTehnotableThemeSetting.cartModalFields\n  const categoryList = getCurrentCategories(pageContext.categories, pageContext.wpmlLang)\n  const validateErrors = data.wpTehnotableThemeSetting.validationErrorsFields\n  const { \n    coockieMain,\n    coockieSettings\n  } = data.wpTehnotableThemeSetting.thanksModalFields\n  \n  const {\n    contactsPhones,\n    contactsEmail,\n    contactsScheduleTime,\n    youtubeLink,\n    facebookLink,\n    instagramLink,\n    footerLabels\n  } = data.wpTehnotableThemeSetting.siteFooterFields\n\n  // Page Blocks\n  const {\n    backgroundImage,\n    resetPasswordForm,\n    textBeforeLink,\n    backToHome,\n    successMessage,\n    loginPageUrl,\n    errMessage,\n    successPasswordMessage\n  } = data.wpPage.resetPasswordPageFields\n\n  return (\n    <PrefixProvider prefix={pageContext.prefix}>\n      <LangCodeProvider code={pageContext.wpmlLang}>\n        <Layout\n          menu={menu}\n          header={header}\n          footer={footer}\n          cart={cart}\n          contactsPhones={contactsPhones}\n          contactsEmail={contactsEmail}\n          contactsScheduleTime={contactsScheduleTime}\n          youtubeLink={youtubeLink}\n          facebookLink={facebookLink}\n          instagramLink={instagramLink}\n          categoryList={categoryList}\n          footerLabels={footerLabels}\n        >\n          <Seo title={title} description={metaDesc} lang={pageContext.lang} />\n          <Helmet>\n            <link \n              rel=\"preload\" \n              href={backgroundImage.localFile.childImageSharp.gatsbyImageData.images.sources[0].srcSet.split(' ')[0]} \n              as=\"image\"\n            />\n          </Helmet>\n          <Breadcrumbs className=\"recovery-breadcrumbs\" list={breadcrumbs} />\n          <RecoveryIntro\n            backgroundImage={backgroundImage}\n            resetPasswordForm={resetPasswordForm}\n            textBeforeLink={textBeforeLink}\n            backToHome={backToHome}\n            successMessage={successMessage}\n            loginPageUrl={loginPageUrl}\n            errMessage={errMessage}\n            successPasswordMessage={successPasswordMessage}\n            validateErrors={validateErrors}\n          />\n          <ModalCoockieMain\n            title={coockieMain.title}\n            desc={coockieMain.desc}\n            btnSettings={coockieMain.btnSettings}\n            btnAccept={coockieMain.btnAccept}\n          />\n          <ModalCoockieSettings\n            title={coockieSettings.title}\n            subtitle={coockieSettings.subtitle}\n            required={coockieSettings.required}\n            analitics={coockieSettings.analithics}\n            personalization={coockieSettings.personalization}\n            advertisment={coockieSettings.advertisment}\n            btnAccept={coockieSettings.acceptBtn}\n            btnAcceptAll={coockieSettings.acceptAllBtn}\n          />\n        </Layout>\n      </LangCodeProvider>\n    </PrefixProvider>\n  )\n}\n\nexport const query = graphql`\n  query getResetPasswordPage($lang: String) {\n    wpPage(locale: {locale: {eq: $lang}}, slug: {eq: \"reset-password\"}) {\n      seo {\n        title\n        metaDesc\n        breadcrumbs {\n          text\n          url\n        }\n      }\n      title\n      resetPasswordPageFields {\n        backgroundImage {\n          localFile {\n            childImageSharp {\n              gatsbyImageData(\n                width: 940\n                quality: 95\n                placeholder: BLURRED\n                height: 930\n                formats: [AUTO, WEBP, AVIF]\n              )\n            }\n          }\n        }\n        resetPasswordForm {\n          title\n          inputEmailLabel\n          button\n          inputPasswordLabel\n          buttonEmail\n        }\n        textBeforeLink\n        loginPageUrl {\n          title\n          url\n        }\n        successMessage\n        backToHome\n        successPasswordMessage\n        errMessage\n      }\n      uri\n    }\n    wpTehnotableThemeSetting(locale: {locale: {eq: $lang}}) {\n      thanksModalFields {\n        coockieMain {\n          title\n          desc\n          btnSettings\n          btnAccept\n        }\n        coockieSettings {\n          title\n          subtitle\n          required {\n            requiredTitle\n            requiredDesc\n          }\n          analithics {\n            analithicsTitle\n            analithicsDesc\n          }\n          personalization {\n            personalizationTitle\n            personalizationDesc\n          }\n          advertisment {\n            advertismentTitle\n            advertismentDesc\n          }\n          acceptBtn\n          acceptAllBtn\n        }\n      }\n      validationErrorsFields {\n        errShortMessage\n        errEmptyAddress\n        errEmptyCity\n        errEmptyDelivery\n        errEmptyEmail\n        errEmptyMessage\n        errEmptyName\n        errEmptyPassword\n        errEmptyPayment\n        errEmptyPhone\n        errEmptyRegion\n        errEmptyWarehouse\n        errEmptyStore\n        errInvalidCupon\n        errInvalidEmail\n        errInvalidLastname\n        errInvalidMiddlename\n        errInvalidName\n        errLongName\n        errNoCupon\n        errShortName\n        errShortPassword\n        fieldGroupName\n      }\n      mainMenuFields {\n        mobileMenuControls {\n          close\n          back\n        }\n        mainMenu {\n          itemName\n          itemSlug\n          submenu {\n            submenuName\n            submenuSlug\n            submenuImg {\n              localFile {\n                childImageSharp {\n                  gatsbyImageData(\n                    width: 315\n                    quality: 95\n                    placeholder: BLURRED\n                    height: 315\n                    formats: [AUTO, WEBP, AVIF]\n                  )\n                }\n              }\n            }\n          }\n        }\n      }\n      cartModalFields {\n        addToCartButton\n        cartTitle\n        cartErrTitle\n        deleteProductFromCart\n        totalPrice\n        checkoutButton {\n          title\n        }\n        catalogButton {\n          title\n        }\n        additionalInfo {\n          text\n        }\n      }\n      siteHeaderFields {\n        headerAuth {\n          personalInfo\n          orderHistory\n          logout\n        }\n        infoSlider {\n          text\n        }\n        contactPhones {\n          number\n        }\n        headerSocialList {\n          facebookLink\n          telegramLink\n          whatsappLink\n        }\n        headerLogo {\n          sourceUrl\n        }\n        searchInputPlaceholder\n        headerButtonClose\n        headerButtonSearch\n      }\n      siteFooterFields {\n        footerLabels {\n          phoneTitle\n          emailTitle\n          scheduleTitle\n          subscribeTitle\n        }\n        footerLogo {\n          sourceUrl\n        }\n        youtubeLink\n        instagramLink\n        facebookLink\n        firstColumn {\n          menuList {\n            itemLink\n            itemName\n          }\n          menuTitle\n        }\n        secondColumn {\n          menuTitle\n          menuList {\n            itemLink\n            itemName\n          }\n        }\n        thirdColumn {\n          menuTitle\n          menuList {\n            itemLink\n            itemName\n          }\n        }\n        contactsBlockTitle\n        contactsScheduleTime\n        contactsPhones {\n          number\n        }\n        contactsEmail\n        bottomLinks {\n          itemTitle\n          itemLink\n        }\n        footerCopyrightText\n      }\n    }\n  }\n`\n\nexport default Recovery","import { isBrowser } from './isBrowser'\n\nexport const detectLighthouse = () => isBrowser() && window.navigator.userAgent.indexOf('Chrome-Lighthouse') === -1","export const getCurrentCategories = (categories, lang) => categories.filter(category => category.slug !== 'uncategorized' && category.lang === lang)"],"names":["_ref","className","list","prefix","useContext","PrefixContext","langCode","LangCodeContext","some","item","url","blog","text","splice","React","typeof","vocab","map","index","replace","length","key","property","Link","to","content","title","bgImg","useEffect","LoginPhotoTl","gsap","delay","clipPath","ease","from","scale","stagger","onComplete","set","this","targets","clearProps","kill","image","getImage","localFile","GatsbyImage","alt","loading","_errors$email","_errors$password","resetPasswordForm","textBeforeLink","backToHome","successMessage","loginPageUrl","errMessage","successPasswordMessage","validateErrors","isFormSent","setIsFormSent","useState","isFormErr","setIsFormErr","isSubmitedEmail","setIsSubmitedEmail","isBrowser","window","location","search","match","register","formState","errors","isSubmitSuccessful","handleSubmit","getValues","useForm","mode","formSubmit","data","e","NProgress","id","slice","split","email","resetPassword","password","axios","method","process","parseInt","then","y","opacity","catch","formError","error","console","viewBox","version","stroke","strokeWidth","fill","fillRule","cx","cy","r","points","onSubmit","htmlFor","inputPasswordLabel","Object","assign","type","autoComplete","required","errEmptyPassword","minLength","value","message","errShortPassword","disabled","button","inputEmailLabel","errEmptyEmail","pattern","errInvalidEmail","buttonEmail","backgroundImage","isMobile","setIsMobile","detectLighthouse","ScrollTrigger","introRecoveryTl","(min-width: 992px)","(max-width: 991px)","LoginPhoto","RecoveryContent","pageContext","getCookie","navigate","metaDesc","breadcrumbs","wpPage","seo","menu","wpTehnotableThemeSetting","mainMenuFields","header","siteHeaderFields","footer","siteFooterFields","cart","cartModalFields","categoryList","getCurrentCategories","categories","wpmlLang","validationErrorsFields","coockieMain","coockieSettings","thanksModalFields","contactsPhones","contactsEmail","contactsScheduleTime","youtubeLink","facebookLink","instagramLink","footerLabels","resetPasswordPageFields","PrefixProvider","LangCodeProvider","code","Layout","Seo","description","lang","Helmet","rel","href","childImageSharp","gatsbyImageData","images","sources","srcSet","as","Breadcrumbs","RecoveryIntro","ModalCoockieMain","desc","btnSettings","btnAccept","ModalCoockieSettings","subtitle","analitics","analithics","personalization","advertisment","acceptBtn","btnAcceptAll","acceptAllBtn","navigator","userAgent","indexOf","filter","category","slug"],"sourceRoot":""}